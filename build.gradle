import com.github.jrbase.codelinecountplugin.CodeLineCountPlugin

allprojects {
    group 'io.github.jrbase'
    version '0.1.1-SNAPSHOT'
}

subprojects {
    apply plugin: "java"
    apply plugin: "groovy"
    apply plugin: 'jacoco'
    apply plugin: CodeLineCountPlugin
    apply plugin: 'checkstyle'

    apply plugin: 'maven'
    apply plugin: 'signing'

    version = rootProject.version

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    plugins.withType(DistributionPlugin) {
        distTar {
            compression = Compression.GZIP
            archiveExtension = 'tar.gz'
        }
    }

    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
        jcenter()
        mavenCentral()
    }

    dependencies {
        testImplementation "junit:junit:4.12"
        testImplementation "org.mockito:mockito-core:2.25.1"

        testImplementation "org.codehaus.groovy:groovy-all:2.5.4"
        testCompile "org.spockframework:spock-core:1.1-groovy-2.4-rc-2"
        testRuntime "net.bytebuddy:byte-buddy:1.9.3"
    }

    test {
        testLogging {
            // Show that tests are run in the command-line output
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }


    // Signature of artifacts
    /*signing {
        sign configurations.archives
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'JRBase'
                    packaging 'jar'
                    // optionally artifactId can be defined here
                    description 'A distributed NoSQL database similar to Redis.'
                    url = 'https://github.com/jrbase/jrbase'

                    scm {
                        connection = 'scm:git@github.com:jrbase/jrbase.git'
                        developerConnection = 'scm:git@github.com:jrbase/jrbase.git'
                        url = 'https://github.com/jrbase/jrbase'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id = 'makey22112'
                            name = 'makey22112'
                            email = 'makey22112@gmail.com'
                        }
                    }
                }
            }
        }
    }*/

    task codeCoverageReport(type: JacocoReport) {
        executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

        subprojects.each {
            println(it)
            sourceSets it.sourceSets.main
        }

        reports {
            xml.enabled true
            xml.destination file("${buildDir}/reports/jacoco/report.xml")
            html.enabled true
            csv.enabled false
        }
    }

    codeCoverageReport.dependsOn {
        subprojects*.test
    }
}